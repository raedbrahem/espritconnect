spring.application.name=espritconnect
server.port=8089

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

### DATABASE ###
spring.datasource.url=jdbc:mysql://localhost:3306/espritconne_db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=

### JPA / HIBERNATE ###
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

# Logging
logging.level.root=info
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} -%level -%logger{60} %msg %n

# JWT Configuration
jwt.secret=ZsdfgqerR45qsd1DFgtr765XCBnhjklcvbzHGTyu098GhjkLm9pQwErTYu

# pour l'upload images
spring.servlet.multipart.enabled=true

# Exemple de configuration pour Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#mon mail:
spring.mail.username=azayz54321.zaied@gmail.com
#mot de passe d'application g?n?r? depuis de mon mail:
spring.mail.password=iowl tzmv itkb gqgh

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
#mon mail:
spring.mail.from=azayz54321.zaied@gmail.com

# Informations Twilio
twilio.accountSid=ACe2971c195f725397ed5c0138de609b6d
twilio.authToken=fb246bb7b84491bba7cf6c4420d393de
twilio.phoneNumber=+12705180213



miro.token=eyJtaXJvLm9yaWdpbiI6ImV1MDEifQ_T0pdficdXqFGQB4xE0w4eIfBdiI
miro.dashboard.id=uXjVITmDeXw=
#paiement
stripe.secret.key=sk_test_51R9SFzFbGicd3TIzqAxCgUzC6bvSNiqoVB6FE66OSjNDK8mKeN0WSf44q8jTBAj2RcJGPun3TqKp2VpoisCsZFE700mI4DmeGp
stripe.public.key=pk_test_51R9SFzFbGicd3TIzXDFETWFFyrukAyBotsV4oJLZXldV6cuqxrghDRQoaMimoKQTXedgEYaqoFmXbE8UNOHtmEp900FtIDPtaZ
stripe.webhook.secret=whsec_4f957f53e612cfd5fac6525275d870b5ef7c542d01a7330e999aa25217199d6b
google.maps.api.key=AIzaSyCj04hsSBf5wbNALSTk3Tvp9py7pLTV9J4

#login with mail:
spring.security.oauth2.client.registration.google.client-id=67817461075-0ojbefd8c7qi4acu5o9mhj58e4aacegb.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8089/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub


# Cloudinary Configuration
cloudinary.cloud-name=dd90kaf3s
cloudinary.api-key=576388249891957
cloudinary.api-secret=tS_b5NamrW2DlW4q0a0M_NIxqgM

#foued


#salma
cohere.api.key=2kp7kM0S85f7befFrKftRISKMMuKIUsvXJUHOcaD
google.api.key=AIzaSyBP0oqpcbNfwg6Xm-6ybr75S6jEoHHoDjk


# Add this to point to your Python script folder
ai.scripts.path=ai_auto_categorizer
ai.matcher.image-dir=${user.dir}/uploads/items

# File upload paths
app.upload.dir=${user.dir}/uploads
app.temp.dir=${user.dir}/temp

# Create necessary directories on startup
