package tn.esprit.examen.nomPrenomClasseExamen.entities.LearnIt;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import jakarta.persistence.*;
import tn.esprit.examen.nomPrenomClasseExamen.entities.Utilisateur.User;

import java.util.Date;
import java.util.Set;


@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
@Entity
public class Question {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    int id;
    String title;
    String content;
    String screenshot;
    Date createdAt;
    private boolean autoGeneratedTag = false;
    int views;
    private boolean reported = false;

    private String reportReason;

    @Temporal(TemporalType.TIMESTAMP)
    private Date updatedAt;
    int vote;
    @Enumerated(EnumType.STRING)
    Tag tag;
    @ManyToOne(fetch = FetchType.EAGER)
    @JsonIgnoreProperties({"questions", "answers", "followees", "followers", "serviceEtudes", "serviceEtudesProvided"})
    User user;
    @OneToMany(mappedBy = "question", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonIgnoreProperties({"question"})
    private Set<Answer> answers;

    public Question(int id, String title, String content, String screenshot, Date createdAt, boolean autoGeneratedTag, int views, boolean reported, String reportReason, Date updatedAt, int vote, Tag tag, User user, Set<Answer> answers) {
        this.id = id;
        this.title = title;
        this.content = content;
        this.screenshot = screenshot;
        this.createdAt = createdAt;
        this.autoGeneratedTag = autoGeneratedTag;
        this.views = views;
        this.reported = reported;
        this.reportReason = reportReason;
        this.updatedAt = updatedAt;
        this.vote = vote;
        this.tag = tag;
        this.user = user;
        this.answers = answers;
    }

    public boolean isAutoGeneratedTag() {
        return autoGeneratedTag;
    }

    public void setAutoGeneratedTag(boolean autoGeneratedTag) {
        this.autoGeneratedTag = autoGeneratedTag;
    }

    public Question() {
    }

    public long getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getScreenshot() {
        return screenshot;
    }

    public void setScreenshot(String screenshot) {
        this.screenshot = screenshot;
    }

    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Tag getTag() {
        return tag;
    }

    public void setTag(Tag tag) {
        this.tag = tag;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public Set<Answer> getAnswers() {
        return answers;
    }

    public void setAnswers(Set<Answer> answers) {
        this.answers = answers;
    }


    public int getVote() {
        return vote;
    }

    public void setVote(int vote) {
        this.vote = vote;
    }

    public Date getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public int getViews() {
        return views;
    }

    public void setViews(int views) {
        this.views = views;
    }

    public boolean isReported() {
        return reported;
    }

    public void setReported(boolean reported) {
        this.reported = reported;
    }

    public String getReportReason() {
        return reportReason;
    }

    public void setReportReason(String reportReason) {
        this.reportReason = reportReason;
    }
}